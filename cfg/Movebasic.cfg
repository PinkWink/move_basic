#!/usr/bin/env python2
PACKAGE = "move_basic"

import roslib; roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("min_turning_velocity", double_t, 0, "Min turning velocity (when turning on spot) [rad/s]", 0.02,  0, 1.0)
gen.add("max_turning_velocity", double_t, 0, "Max turning velocity (when turning on spot) [rad/s]", 1.0,  0, 4.0)
gen.add("max_lateral_velocity", double_t, 0, "Max lateral velocity (when going straight) [rad/s]", 0.5,  0, 4.0)
gen.add("angular_acceleration", double_t, 0, "Angular acceleration [rad^2/s]", 0.3,  0.01, 4.0)
gen.add("max_linear_velocity", double_t, 0, "Max linear velocity [m/s]", 0.5,  0, 1.1)
gen.add("linear_acceleration", double_t, 0, "Linear_acceleration [m^2/s]", 0.1,  0, 1.1)
gen.add("angular_tolerance", double_t, 0, "Angular tolerance (when turning on spot) [rad]", 0.1,  0, 0.5)
gen.add("linear_tolerance", double_t, 0, "Linear tolerance [m]", 0.1,  0, 0.2)
gen.add("localization_latency", double_t, 0, "Localization latency [s]", 0.5,  0, 1.0)
gen.add("lateral_kp", double_t, 0, "Lateral P", 2.0,  0, 20.0)
gen.add("lateral_ki", double_t, 0, "Lateral I", 0.0,  0, 20.0)
gen.add("lateral_kd", double_t, 0, "Lateral D", 20.0,  0, 20.0)
gen.add("linear_gain", double_t, 0, "Linear velocity gain", 1.0, 0, 10.0)
gen.add("rotational_gain", double_t, 0, "Angular velocity gain", 2.5, 0, 10.0)
gen.add("velocity_threshold", double_t, 0, "Velocity threshold (to mark goal as finished) [m/s]", 0.01, 0, 0.5)
gen.add("min_side_dist", double_t, 0, "Minimum obstacle free side distance [m]", 0.3, 0, 5.0)
gen.add("side_recover_weight", double_t, 0, "Lateral erorr recovery weight", 1.0, 0, 5.0)
gen.add("abort_timeout", double_t, 0, "Driving away from goal timeout [s]", 5.0, 0, 60.0)
gen.add("obstacle_wait_threshold", double_t, 0, "Obstacle wait threshold [s]", 60.0, 0, 200.0)
gen.add("forward_obstacle_threshold", double_t, 0, "Forward obstacle threshold [m]", 1.0, 0.0, 3.0)
gen.add("reverse_without_turning_threshold", double_t, 0, "Reverse distance without turning [m]", 1.0, 0, 3.0)



exit(gen.generate(PACKAGE, "move_basic", "Movebasic"))
